---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    extra_hosts:
      - "moby:127.0.0.1"
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9081:9081
    depends_on:
      - kafka
    environment:
      - SERVER_PORT=9081
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:32181
      - KAFKA_CLUSTERS_0_NAME=local
  kafka-setup:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    hostname: kafka-setup
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:29092 1 60 && \
                       kafka-topics --create --if-not-exists --topic atm-movements --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 && \
                       kafka-topics --create --if-not-exists --topic online-movements --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 && \
                       kafka-topics --create --if-not-exists --topic merchant-movements --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 && \
                       kafka-topics --create --if-not-exists --topic datagen-fraudsimulator-data-results --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 && \
                       kafka-topics --create --if-not-exists --topic datagen-fraudsimulator-data --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 && \
                       sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    extra_hosts:
      - "moby:127.0.0.1"
  fraud-simulator:
    image: fraud-simulator:1.0.0-SNAPSHOT
    ports:
      - 8090:8090
    depends_on:
      - kafka
      - kafka-setup
    environment:
      - QUARKUS_HTTP_PORT=8090
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092



#  db2:
#    image: 043264546031.dkr.ecr.eu-west-1.amazonaws.com/db2server:1.2
#    hostname: db2
#    privileged: true
#    ports:
#      - '50000:50000'
#    depends_on:
#      - zookeeper
#    environment:
#      LICENSE: accept
#      DBNAME: TESTDB
#      DB2INST1_PASSWORD: =Password!

#  schema-registry:
#    image: confluentinc/cp-schema-registry:7.0.0
#    hostname: schema-registry
#    depends_on:
#      - zookeeper
#      - kafka
#    ports:
#      - '8081:8081'
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
#    extra_hosts:
#      - "moby:127.0.0.1"

  # This "container" is a workaround to pre-create topics for the Kafka Music application
  # until we have a more elegant way to do that.
#  kafka-create-topics:
#    image: confluentinc/cp-kafka:7.0.0
#    depends_on:
#      - kafka
#    hostname: kafka-create-topics
#    # We defined a dependency on "kafka", but `depends_on` will NOT wait for the
#    # dependencies to be "ready" before starting the "kafka-create-topics"
#    # container;  it waits only until the dependencies have started.  Hence we
#    # must control startup order more explicitly.
#    # See https://docs.docker.com/compose/startup-order/
#    command: "bash -c 'echo Waiting for Kafka to be ready... && \
#                       cub kafka-ready -b kafka:29092 1 20 && \
#                       kafka-topics --create --topic play-events --if-not-exists --zookeeper zookeeper:32181 --partitions 4 --replication-factor 1 && \
#                       kafka-topics --create --topic song-feed --if-not-exists --zookeeper zookeeper:32181 --partitions 4 --replication-factor 1 && \
#                       sleep infinity'"
#    environment:
#      # The following settings are listed here only to satisfy the image's requirements.
#      # We override the image's `command` anyways, hence this container will not start a broker.
#      KAFKA_BROKER_ID: ignored
#      KAFKA_ZOOKEEPER_CONNECT: ignored
#    extra_hosts:
#      - "moby:127.0.0.1"